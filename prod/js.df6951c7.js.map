{"version":3,"sources":["js/modules/apiKeys.js","js/modules/locationForm.js","js/modules/siteHeader.js","js/modules/beatSettings.js","js/modules/backgroundColors.js","js/modules/displayState.js","js/modules/weather.js","js/modules/location.js","js/modules/audioSettings.js","js/index.js"],"names":["API_KEYS","openWeatherMaps","googleMaps","locationForm","toggleFormVisibility","document","querySelector","classList","toggle","resetForm","innerHTML","toggleResultsError","siteHeader","searchTerm","toggleHeaderVisibility","updateHeaderDislay","j","ld","locationName","titleCase","city","name","innerText","Math","round","list","main","temp","wind","speed","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","beatSettings","numBeats","beats","temps","minTemp","maxTemp","windSpeed","activeBeat","toggleBeatContainerVisibility","setupBeats","createBeats","setBeatData","t","Beat","createDomElement","window","setTimeout","toggleBeatVisibility","b","querySelectorAll","style","animationDelay","max","min","setBeatPositions","audioSettings","setupAudio","maxBeatPositions","maxX","maxY","leftValue","mapNumberToRange","topValue","innerWidth","top","left","clearBeats","remove","beatWidth","offsetWidth","beatHeight","offsetHeight","backgroundColors","bgColors","orbColors","shadowColors","setBackgroundColor","timeId","getColorCondition","siteContainer","bgGradientString","toString","bgGradientDir","background","orbGradientString","dir","deg","boxShadow","currentTime","Date","getTime","timezone","sunriseTime","sunrise","sunsetTime","sunset","sunriseDiff","abs","sunsetDiff","condition","clouds","all","displayState","active","toggleState","playing","togglePlaying","clearNotes","reset","getWeatherData","lat","lng","baseUrl","coords","weatherKey","url","units","fetch","then","r","json","getCoordinates","loc","key","status","results","geometry","location","root","notes","pattern","bpm","synth","Tone","PolySynth","Synth","oscillator","type","envelope","attack","decay","sustain","release","toMaster","setTempo","setNoteArray","setRootNote","interval","createPattern","floor","Transport","value","Pattern","time","note","triggerAttackRelease","index","toggleActiveState","start","updatePlayToggle","btn","add","stop","addEventListener","e","preventDefault","body","onkeyup","keyCode","onresize"],"mappings":"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","file":"js.df6951c7.js","sourceRoot":"../src","sourcesContent":["export const API_KEYS = {\n\topenWeatherMaps: '54352b0dcabe57572744b22fd3043777',\n\tgoogleMaps: 'AIzaSyBANFz3dZldaqxIUs0XjSxITT72Wo8BhhE'\n};\n","export const locationForm = {\n\ttoggleFormVisibility() {\n\t\tdocument\n\t\t\t.querySelector('.js-location-form-container')\n\t\t\t.classList.toggle('location-form--hidden');\n\t},\n\tresetForm() {\n\t\tdocument.querySelector('.js-location-form-label').innerHTML =\n\t\t\t'Where do you want to listen to?';\n\t},\n\ttoggleResultsError() {\n\t\tdocument.querySelector('.js-location-form-label').innerHTML =\n\t\t\t'No weather data found for your location.&nbsp;<br class=\"location-form__error-line-break\"/>How about trying again?';\n\t}\n};\n","export const siteHeader = {\n\tsearchTerm: null,\n\ttoggleHeaderVisibility() {\n\t\t// Toggle Header Visibility\n\t\tconst h = document.querySelector('.header');\n\t\th.classList.toggle('header--hidden');\n\t},\n\tupdateHeaderDislay(j) {\n\t\tconst ld = document.querySelector('.header__location-display');\n\n\t\t// Update location display\n\t\tif (j != null) {\n\t\t\t// Format city name\n\t\t\tconst locationName = titleCase(j.city.name);\n\n\t\t\t// Set header\n\t\t\tld.innerText = `${locationName} is ${Math.round(\n\t\t\t\tj.list[0].main.temp\n\t\t\t)}°F with ${Math.round(j.list[0].wind.speed)}mph winds.`;\n\t\t} else {\n\t\t\tld.innerText = 'Here is your custom weather tune.';\n\t\t}\n\t}\n};\n\nconst titleCase = str => {\n\tconst splitStr = str.toLowerCase().split(' ');\n\tfor (let i = 0; i < splitStr.length; i++) {\n\t\tsplitStr[i] =\n\t\t\tsplitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n\t}\n\t// Directly return the joined string\n\treturn splitStr.join(' ');\n};\n","export const beatSettings = {\n\tnumBeats: 8,\n\tbeats: [],\n\ttemps: [],\n\tminTemp: null,\n\tmaxTemp: null,\n\twindSpeed: null,\n\tactiveBeat: null,\n\t// Toggle visibility of beats container\n\ttoggleBeatContainerVisibility() {\n\t\tdocument.querySelector('.beats').classList.toggle('beats--hidden');\n\t},\n\t// Set up beat objects and data\n\tsetupBeats(j) {\n\t\tthis.createBeats(j);\n\t\tthis.setBeatData(j);\n\t},\n\t// Create beat DOM elements\n\tcreateBeats(j) {\n\t\tfor (let i = 0; i < this.numBeats; i += 1) {\n\t\t\t// Get temperature\n\t\t\tconst t = Math.round(j.list[i].main.temp);\n\t\t\tthis.temps[i] = t;\n\n\t\t\t// Initialize Beat Object\n\t\t\tthis.beats[i] = new Beat(i, t);\n\t\t\tthis.beats[i].createDomElement();\n\t\t}\n\n\t\twindow.setTimeout(() => {\n\t\t\tbeatSettings.toggleBeatVisibility();\n\t\t}, 50);\n\t},\n\t// Animate beats into view\n\ttoggleBeatVisibility() {\n\t\tconst b = document.querySelectorAll('.beats__beat');\n\n\t\tfor (let i = 0; i < b.length; i++) {\n\t\t\tb[i].style.animationDelay = `${i * 0.075}s`;\n\t\t}\n\t},\n\t// Set beat's data\n\tsetBeatData(j) {\n\t\t// Set min and max temps for the range\n\t\tthis.maxTemp = Math.max(...beatSettings.temps);\n\t\tthis.minTemp = Math.min(...beatSettings.temps);\n\n\t\t// Set current wind speed\n\t\tthis.windSpeed = j.list[0].wind.speed;\n\n\t\t// Once this data is set\n\t\t// Set beat position on screen\n\t\t// Setup audio playback\n\t\tthis.setBeatPositions();\n\t\taudioSettings.setupAudio();\n\t},\n\t// Set beat position in DOM\n\tsetBeatPositions() {\n\t\tconst min = 0;\n\t\tconst { maxX, maxY } = maxBeatPositions();\n\n\t\t// Set position of each beat object\n\t\tconst b = document.querySelectorAll('.beats__beat');\n\t\tfor (let i = 0; i < b.length; i += 1) {\n\t\t\t// Convert beat temp to vertical position\n\t\t\tconst leftValue = mapNumberToRange(\n\t\t\t\tthis.temps[i],\n\t\t\t\tthis.minTemp,\n\t\t\t\tthis.maxTemp,\n\t\t\t\tmin,\n\t\t\t\tmaxX\n\t\t\t);\n\t\t\tconst topValue = mapNumberToRange(\n\t\t\t\tthis.temps[i],\n\t\t\t\tthis.minTemp,\n\t\t\t\tthis.maxTemp,\n\t\t\t\tmaxY,\n\t\t\t\tmin\n\t\t\t);\n\n\t\t\t// Assign CSS value\n\t\t\tif (window.innerWidth >= 768) {\n\t\t\t\tb[i].style.top = `${topValue}%`;\n\t\t\t} else {\n\t\t\t\tb[i].style.left = `${leftValue}%`;\n\t\t\t}\n\t\t}\n\t},\n\t// Clear beats from DOM\n\tclearBeats() {\n\t\t// Remove beats from DOM\n\t\tconst b = document.querySelectorAll('.beats__beat-container');\n\n\t\tfor (let i = 0; i < b.length; i += 1) {\n\t\t\tb[i].remove();\n\t\t}\n\n\t\tthis.beats = [];\n\t}\n};\n\nconst maxBeatPositions = () => {\n\t// Get beat height\n\tconst beatWidth = document.querySelector('.beats__beat').offsetWidth;\n\tconst beatHeight = document.querySelector('.beats__beat').offsetHeight;\n\n\t// Get dimensions of beat container\n\tconst beatContainerWidth = document.querySelector('.beats').offsetWidth;\n\tconst beatContainerHeight = document.querySelector('.beats').offsetHeight;\n\n\t// Calculate percentage to return as values\n\tconst max = {\n\t\tmaxX: 100 * (1 - beatWidth / beatContainerWidth),\n\t\tmaxY: 100 * (1 - beatHeight / beatContainerHeight)\n\t};\n\treturn max;\n};\n","export const backgroundColors = {\n\tbgColors: [\n\t\t['#587BAF', '#C7C8E6'], // Sunrise\n\t\t['#81688D', '#A692AF'], // Sunset\n\t\t['#5182EF', '#91CFFF'], // Day, Clear\n\t\t['#626979', '#9CA4B9'], // Day, Cloudy\n\t\t['#373A4E', '#5C618A'], // Night, Clear\n\t\t['#14161C', '#464657'] // Night, Cloudy\n\t],\n\torbColors: [\n\t\t['#587BAF', '#FFE8DB'], // Sunrise\n\t\t['#81688D', '#F0B5A8'], // Sunset\n\t\t['#5182EF', '#C6E7FF'], // Day, Clear\n\t\t['#626979', '#626979'], // Day, Cloudy\n\t\t['#373A4E', '#4C4F6A'], // Night, Clear\n\t\t['#14161C', '#5E5E74'] // Night, Cloudy\n\t],\n\tshadowColors: [\n\t\t'215, 33%, 10%', // Sunrise\n\t\t'283, 14%, 10%', // Sunset\n\t\t'220, 84%, 10%', // Day, Clear\n\t\t'210, 10%, 10%', // Day, Cloudy\n\t\t'233, 18%, 10%', // Night, Clear\n\t\t'227, 18%, 10%' // Night, Cloudy\n\t],\n\tsetBackgroundColor(j) {\n\t\t// Get color condition\n\t\tlet timeId = this.getColorCondition(j);\n\n\t\t// Set background color of beat container\n\t\tconst siteContainer = document.querySelector('.site');\n\t\tconst bgGradientString = this.bgColors[timeId].toString();\n\n\t\t// Set direction of background\n\t\tlet bgGradientDir = 135;\n\t\tif (timeId < 3) {\n\t\t\tbgGradientDir = 180;\n\t\t}\n\n\t\t// Set background CSS\n\t\tsiteContainer.style.background = `linear-gradient(${bgGradientDir}deg, ${bgGradientString})`;\n\n\t\t// Set bg color of each beat\n\t\tconst beats = document.querySelectorAll('.beats__beat');\n\t\tconst orbGradientString = this.orbColors[timeId].toString();\n\n\t\tfor (let i = 0; i < beats.length; i++) {\n\t\t\t// Use wind direction of each beat as angle of gradient\n\t\t\tlet dir = j.list[i].wind.deg;\n\n\t\t\tbeats[\n\t\t\t\ti\n\t\t\t].style.background = `linear-gradient(${dir}deg, ${orbGradientString})`;\n\t\t\tbeats[\n\t\t\t\ti\n\t\t\t].style.boxShadow = `0px 20px 32px hsla(${this.shadowColors[timeId]}, 0.15)`;\n\t\t}\n\t},\n\tgetColorCondition(j) {\n\t\t// This returns ID of colors in each array to use\n\t\t// Based on current time in searched location\n\n\t\t// Get current time\n\t\tconst currentTime =\n\t\t\tMath.round(new Date().getTime() / 1000) + j.city.timezone;\n\n\t\t// Get sunrise and sunset times at location\n\t\tconst sunriseTime = j.city.sunrise + j.city.timezone;\n\t\tconst sunsetTime = j.city.sunset + j.city.timezone;\n\n\t\t// Get difference between current time and sunrise and sunset\n\t\tconst sunriseDiff = Math.abs(currentTime - sunriseTime);\n\t\tconst sunsetDiff = Math.abs(currentTime - sunsetTime);\n\n\t\t// Create variable for max difference in current time and sunset/sunrise\n\t\tconst timeDiffRange = 3600; // one hour in seconds\n\n\t\t// Set initial condition\n\t\tlet condition = 0;\n\n\t\t// Check if time is within sunrise or sunset range\n\t\tif (sunriseDiff <= timeDiffRange) {\n\t\t\treturn condition;\n\t\t}\n\n\t\tif (sunsetDiff <= timeDiffRange) {\n\t\t\tcondition += 1;\n\t\t\treturn condition;\n\t\t}\n\n\t\t// Check whether it's night or day\n\t\tif (currentTime > sunriseTime && currentTime < sunsetTime) {\n\t\t\tcondition += 2;\n\t\t} else {\n\t\t\tcondition += 4;\n\t\t}\n\n\t\t// Increment condition if cloudy over 50%\n\t\tif (j.list[0].clouds.all > 60) {\n\t\t\tcondition += 1;\n\t\t}\n\n\t\treturn condition;\n\t}\n};\n","import * as locationForm from './locationForm.js';\nimport * as siteHeader from './siteHeader.js';\nimport * as beatSettings from './beatSettings.js';\nimport * as backgroundColors from './backgroundColors.js';\n\nexport const displayState = {\n\tactive: false,\n\ttoggleState(j = null) {\n\t\t// Each time state is toggled\n\t\t// Toggle form and header display\n\t\tlocationForm.toggleFormVisibility();\n\t\tsiteHeader.toggleHeaderVisibility();\n\t\tbeatSettings.toggleBeatContainerVisibility();\n\n\t\tif (!this.active) {\n\t\t\t// Reset form\n\t\t\tlocationForm.resetForm();\n\n\t\t\t// Setup beat objects and data\n\t\t\tdocument.querySelector('.js-location-form').reset();\n\t\t\tbeatSettings.setupBeats(j);\n\n\t\t\t// Set backround color\n\t\t\tbackgroundColors.setBackgroundColor(j);\n\n\t\t\t// Update header display\n\t\t\tsiteHeader.updateHeaderDislay(j);\n\n\t\t\t// Toggle status flag\n\t\t\tthis.active = true;\n\t\t} else {\n\t\t\t// Remove beat objects\n\t\t\tbeatSettings.clearBeats();\n\n\t\t\t// Turn off playing\n\t\t\tif (audioSettings.playing) {\n\t\t\t\taudioSettings.togglePlaying();\n\t\t\t}\n\n\t\t\t// Clear notes\n\t\t\taudioSettings.clearNotes();\n\n\t\t\t// Toggle status flag\n\t\t\tthis.active = false;\n\t\t}\n\t}\n};\n","import * as API_KEYS from './apiKeys.js';\nimport { locationForm } from './locationForm.js';\nimport * as displayState from './displayState';\n\nexport const getWeatherData = (lat, lng) => {\n\tconst baseUrl = 'https://api.openweathermap.org/data/2.5/forecast?';\n\tconst coords = `lat=${lat}&lon=${lng}`;\n\tconst units = '&units=imperial';\n\tconst weatherKey = `&appid=${API_KEYS.openWeatherMaps}`;\n\n\tconst url = `${baseUrl}${coords}${units}${weatherKey}`;\n\n\tfetch(url)\n\t\t.then(r => r.json())\n\t\t.then(j => {\n\t\t\tif (j.list.length > 0) {\n\t\t\t\tdisplayState.toggleState(j);\n\t\t\t} else {\n\t\t\t\tlocationForm.toggleResultsError();\n\t\t\t}\n\t\t});\n};\n","import * as API_KEYS from './apiKeys.js';\nimport { locationForm } from './locationForm.js';\nimport { getWeatherData } from './weather.js';\n\nconst getCoordinates = loc => {\n\t// Create API call\n\tconst baseUrl = 'https://maps.googleapis.com/maps/api/geocode/json?address=';\n\tconst key = `&key=${API_KEYS.googleMaps}`;\n\tconst url = `${baseUrl}${loc}${key}`;\n\n\tfetch(url)\n\t\t.then(r => r.json())\n\t\t.then(j => {\n\t\t\tif (j.status === 'OK') {\n\t\t\t\t// Get latitude and longitude\n\t\t\t\tconst { lat } = j.results[0].geometry.location;\n\t\t\t\tconst { lng } = j.results[0].geometry.location;\n\n\t\t\t\t// Find weather data for coordinates\n\t\t\t\tgetWeatherData(lat, lng);\n\t\t\t} else {\n\t\t\t\tlocationForm.toggleResultsError();\n\t\t\t}\n\t\t});\n};\n\nexport { getCoordinates };\n","export const audioSettings = {\n\troot: null,\n\tnotes: [],\n\tpattern: null,\n\tbpm: null,\n\tsynth: new Tone.PolySynth(4, Tone.Synth, {\n\t\toscillator: {\n\t\t\ttype: 'sine'\n\t\t},\n\t\tenvelope: {\n\t\t\tattack: 0.001,\n\t\t\tdecay: 0.1,\n\t\t\tsustain: 0.1,\n\t\t\trelease: 0.9\n\t\t}\n\t}).toMaster(),\n\tplaying: false,\n\tsetupAudio() {\n\t\tthis.setTempo();\n\t\tthis.setNoteArray();\n\t},\n\tsetRootNote() {\n\t\t// Define range limits for temp and root\n\t\tconst minTempLevel = -50;\n\t\tconst maxTempLevel = 150;\n\t\tconst minRoot = 0;\n\t\tconst maxRoot = 600;\n\n\t\t// Set root note based on min temp\n\t\tconst r = mapNumberToRange(\n\t\t\tbeatSettings.minTemp,\n\t\t\tminTempLevel,\n\t\t\tmaxTempLevel,\n\t\t\tminRoot,\n\t\t\tmaxRoot\n\t\t);\n\n\t\treturn r;\n\t},\n\tsetNoteArray() {\n\t\t// Set root note based on min temp\n\t\tthis.root = this.setRootNote();\n\n\t\t// Create tone array\n\t\tfor (let i = 0; i < beatSettings.numBeats; i++) {\n\t\t\tconst interval = beatSettings.temps[i] / beatSettings.temps[0];\n\n\t\t\t// Create note by multipling interval and root\n\t\t\tthis.notes[i] = interval * this.root;\n\t\t}\n\n\t\t// When notes are ready, toggle playing\n\t\t// FIXME: Is there a better way to handle this?\n\t\tthis.createPattern();\n\t\twindow.setTimeout(() => {\n\t\t\tthis.togglePlaying();\n\t\t}, 1000);\n\t},\n\tsetTempo() {\n\t\t// Set windspeed and tempo ranges\n\t\tconst minSpeed = 0;\n\t\tconst maxSpeed = 30;\n\t\tconst minTempo = 100;\n\t\tconst maxTempo = 300;\n\n\t\t// Map windspeed to tempo\n\t\tthis.bpm = Math.floor(\n\t\t\tmapNumberToRange(\n\t\t\t\tbeatSettings.windSpeed,\n\t\t\t\tminSpeed,\n\t\t\t\tmaxSpeed,\n\t\t\t\tminTempo,\n\t\t\t\tmaxTempo\n\t\t\t)\n\t\t);\n\n\t\t// Set tempo\n\t\tTone.Transport.bpm.value = audioSettings.bpm;\n\t},\n\tcreatePattern() {\n\t\tthis.pattern = new Tone.Pattern(function(time, note) {\n\t\t\taudioSettings.synth.triggerAttackRelease(note, 0.25);\n\t\t\tbeatSettings.beats[this.index].toggleActiveState();\n\t\t}, audioSettings.notes);\n\n\t\tthis.pattern.start(0);\n\t},\n\ttogglePlaying() {\n\t\tTone.Transport.toggle();\n\t\tthis.playing = !this.playing;\n\t},\n\tupdatePlayToggle() {\n\t\tconst btn = document.querySelector('.js-toggle-playing-btn');\n\n\t\tif (audioSettings.playing) {\n\t\t\tbtn.classList.remove('button__mute-btn');\n\t\t\tbtn.classList.add('button__unmute-btn');\n\t\t} else {\n\t\t\tbtn.classList.add('button__mute-btn');\n\t\t\tbtn.classList.remove('button__unmute-btn');\n\t\t}\n\t},\n\tclearNotes() {\n\t\tthis.notes = [];\n\t\tthis.pattern.stop();\n\t}\n};\n","import '../styles/index.scss';\n\nimport { getCoordinates } from './modules/location';\nimport * as audioSettings from './modules/audioSettings';\nimport * as beatSettings from './modules/beatSettings';\nimport * as displayState from './modules/displayState';\n\n// Form submission\ndocument\n\t.querySelector('.js-location-form')\n\t.addEventListener('submit', function(e) {\n\t\te.preventDefault();\n\n\t\t// Use search value to get coordinates and weather data\n\t\tconst loc = document.querySelector('.js-location-search-field').value;\n\t\tgetCoordinates(loc);\n\t});\n\n// Play/pause toggle\ndocument.querySelector('.js-toggle-playing-btn').addEventListener(\n\t'click',\n\tfunction() {\n\t\taudioSettings.updatePlayToggle();\n\t\taudioSettings.togglePlaying();\n\t},\n\tfalse\n);\n\n// Spacebar triggers play pause\ndocument.body.onkeyup = function(e) {\n\tif (displayState.active) {\n\t\tif (e.keyCode === 32) {\n\t\t\taudioSettings.updatePlayToggle();\n\t\t\taudioSettings.togglePlaying();\n\t\t}\n\t}\n};\n\n// Back button\n// Toggle state back to form\ndocument\n\t.querySelector('.js-change-location-btn')\n\t.addEventListener('click', function() {\n\t\tdisplayState.toggleState();\n\t});\n\n// Update beat positions on resize\nwindow.onresize = function() {\n\tbeatSettings.setBeatPositions();\n};\n"]}